/* 
int main() {
  int x;
  while (x <= 10) 
    x = x + 1;
  return 0;
}
*/

/*
forall (x: int). I x
s.t.
I (x: int): bool =mu (x > 10 => true) /\ (x <= 10 => I (x + 1));
*/

/*
int main() {
  int x;
  while (x >= 0) 
    x = x - 1;
  return 0;
}
*/

/*
forall (x: int). I x
s.t.
I (x: int): bool =mu (x < 0 => true) /\ (x >= 0 => I (x - 1));
*/

/*
WF_I_((x1: int) (x2: int)) :=
  x1 >= 0 /\ x1 >= x2 + 1
*/

/* this condition is always false? invalid */
/*
forall (x: int). I x
s.t.
I (x: int): bool =nu x != 0 /\ I(x-1);
*/

exists (x: int). I x
s.t.
I (x: int): bool =nu x != 0 /\ I(x-1);

/*
*** a genuine solution is found:
FN_#pvar1_x_((x1: int)) :=
  x1 = -1
U_I_((x1: int)) :=
  x1 != 0 /\ -1 + x1 < 0
*/

/*

f(x) =Î¼ x<=10 /\ f(x+1) \/ x>10

f0(x) = false
f1(x) = x<=10 /\ false \/ x>10 = x>10
f2(x) = x<=10 /\ x+1>10 \/ x>10
      = 9<x<=10 \/ x>10
f3(x) = x<=10 /\ (9<x+1<=10 \/ x+1>10) \/ x>10
      = x<=10 /\ (8<x<=9 \/ x>9) \/ x>10
f4(x) = x<=10 /\ (x+1<=10 /\ (8<x+1<=9 \/ x+1>9)) \/ x>10
      = x<=10 /\ (x<=9 /\ (7<x<=8 \/ x>8)) \/ x>10

dune exec main -- -c ./config/solver/dbg_muval_prove_tb_ar.json -p muclp ./benchmarks/muCLP/popl2023mod/function_example1.hes

*/